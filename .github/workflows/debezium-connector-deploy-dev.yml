name: Deploy Debezium Connector to Dev

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ github.sha }}
    steps:
      # 코드 체크아웃 (서브 묘듈 포함)
      - name: Checkout Code (with submodules)
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: recursive

      # Kakao Container Registry 로그인
      - name: Login to KCR
        run: echo "${{ secrets.KCR_PASSWORD }}" | docker login ${{ secrets.KCR_HOST }} -u ${{ secrets.KCR_USER }} --password-stdin

      # Docker 이미지 빌드 & KCR 푸시
      - name: Build & Push Docker Image
        run: |
          IMAGE=${{ secrets.KCR_HOST }}/mcp-hub-backend-dev/connect
          TAG=${{ github.sha }}

          # build with both tags
          docker build -t $IMAGE:$TAG -t $IMAGE:latest .

          # push both tags
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

  copy-configs:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy configs and mysql directories to VM
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "sudo mkdir -p /app/compose && sudo chown ubuntu:ubuntu /app/compose"
          scp -o StrictHostKeyChecking=no -r ./configs ubuntu@${{ secrets.EC2_HOST }}:/app/compose/
          scp -o StrictHostKeyChecking=no -r ./mysql ubuntu@${{ secrets.EC2_HOST }}:/app/compose/

  trigger-gateway-deploy:
    needs: [build-and-deploy, copy-configs]
    uses: 8LOWUP/spring-api-gateway-devonly/.github/workflows/mcp-market-reusable-dev.yml@main
    with:
      service: 'connect'
      tag: ${{ needs.build-and-deploy.outputs.tag }}
    secrets:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      KCR_HOST: ${{ secrets.KCR_HOST }}
      EC2_HOST: ${{ secrets.EC2_HOST }}

