name: Deploy Debezium Connector to Dev

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ github.sha }}
    steps:
      # 코드 체크아웃 (서브묘듈 포함)
      - name: Checkout Code (with submodules)
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: recursive

      # Kakao Container Registry 로그인
      - name: Login to KCR
        run: echo "${{ secrets.KCR_PASSWORD }}" | docker login ${{ secrets.KCR_HOST }} -u ${{ secrets.KCR_USER }} --password-stdin

      # Docker 이미지 빌드 & KCR 푸시
      - name: Build & Push Docker Image
        run: |
          IMAGE=${{ secrets.KCR_HOST }}/mcp-hub-backend-dev/connect
          TAG=${{ github.sha }}

          docker build -t $IMAGE:$TAG -t $IMAGE:latest .
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

  copy-configs:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}

      - name: Copy configs and mysql directories to VM
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "sudo mkdir -p /app/compose && sudo chown ubuntu:ubuntu /app/compose"
          scp -o StrictHostKeyChecking=no -r ./configs ubuntu@${{ secrets.GCP_HOST }}:/app/compose/
          scp -o StrictHostKeyChecking=no -r ./mysql ubuntu@${{ secrets.GCP_HOST }}:/app/compose/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-deploy, copy-configs]
    steps:
      # SSH 키 등록
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}

      # 실제 배포 수행
      - name: Deploy to Dev Server
        run: |
          SERVICE=connect
          TAG=${{ needs.build-and-deploy.outputs.tag }}
          IMAGE=${{ secrets.GCP_HOST }}/mcp-hub-backend-dev/$SERVICE:$TAG

          echo "Re-deploying $SERVICE:$TAG (clean run)"

          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "
            SERVICE=$SERVICE &&
            TAG=$TAG &&
            IMAGE=${{ secrets.KCR_HOST }}/mcp-hub-backend-dev/\$SERVICE:\$TAG &&
          
            cd /home/app &&
            docker compose --env-file docker-compose.prod.env down \$SERVICE &&
            docker compose --env-file docker-compose.prod.env pull \$SERVICE &&
            docker compose --env-file docker-compose.prod.env up -d --no-deps \$SERVICE &&
            docker image prune -a -f
          "